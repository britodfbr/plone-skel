[buildout]
newest = false
prefer-final = true
show-picked-versions = true
versions = versions

find-links =
    http://dist.plone.org
    http://download.zope.org/ppix/
    http://download.zope.org/distribution/
    http://effbot.org/downloads

extensions =
#    buildout.sanitycheck

environment-vars =
    zope_i18n_compile_mo_files true
    PYTHON_EGG_CACHE ${buildout:directory}/var/.python-eggs

[instance_base]
user = ${buildout:user}
effective-user = ${buildout:effective-user}
debug-mode = off
verbose-security = ${buildout:verbose-security}
deprecation-warnings = ${buildout:deprecation-warnings}
var = ${buildout:var-dir}
blob-storage = ${:var}/blobstorage
event-log-max-size = 5 MB
event-log-old-files = 5
access-log-max-size = 20 MB
access-log-old-files = 5

eggs =
    ${buildout:eggs}

zcml = 
    ${buildout:zcml}

products = 
    ${buildout:directory}/products

environment-vars = 
    ${buildout:environment-vars}

[zeoserver_base]
effective-user = ${buildout:effective-user}
var = ${buildout:var-dir}
blob-storage = ${buildout:var-dir}/blobstorage
zeo-log     = ${buildout:var-dir}/zeoserver/zeoserver.log
pid-file    = ${buildout:var-dir}/zeoserver/zeoserver.pid
socket-name = ${buildout:var-dir}/zeoserver/zeo.zdsock

[client_base]
user = ${buildout:user}
effective-user = ${buildout:effective-user}
debug-mode = off
zeo-client = true
shared-blob = on
http-fast-listen = off
verbose-security = ${buildout:verbose-security}
deprecation-warnings = ${buildout:deprecation-warnings}
var = ${buildout:var-dir}
blob-storage = ${:var}/blobstorage
event-log-max-size = 5 MB
event-log-old-files = 5
access-log-max-size = 20 MB
access-log-old-files = 5
event-log = ${buildout:var-dir}/${:_buildout_section_name_}/event.log
z2-log    = ${buildout:var-dir}/${:_buildout_section_name_}/Z2.log
pid-file  = ${buildout:var-dir}/${:_buildout_section_name_}/${:_buildout_section_name_}.pid
lock-file = ${buildout:var-dir}/${:_buildout_section_name_}/${:_buildout_section_name_}.lock
eggs =
    ${buildout:eggs}

zcml = 
    ${buildout:zcml}

products = 
    ${buildout:directory}/products

environment-vars = 
    ${buildout:environment-vars}

[repozo]
recipe = zc.recipe.egg
eggs = ZODB3
scripts = repozo

[setpermissions]
recipe = plone.recipe.command
command =
    # Dummy references to force this to execute after referenced parts
    echo ${backup:location} ${unifiedinstaller:need-sudo} > /dev/null
    chmod 600 .installed.cfg
    # Make sure anything we've created in var is r/w by our group
    find ${buildout:var-dir} -type d -exec chmod 770 {} \; 2> /dev/null
    find ${buildout:var-dir} -type f -exec chmod 660 {} \; 2> /dev/null
    find ${buildout:backups-dir} -type d -exec chmod 770 {} \; 2> /dev/null
    find ${buildout:backups-dir} -type f -exec chmod 660 {} \; 2> /dev/null
    chmod 754 ${buildout:directory}/bin/*
update-command = ${:command}

[zopepy]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
interpreter = zopepy
scripts = zopepy

[unifiedinstaller]
recipe = plone.recipe.unifiedinstaller
user = ${buildout:user}
effective-user = ${buildout:effective-user}
buildout-user = ${buildout:buildout-user}
need-sudo = ${buildout:need-sudo}

[precompiler]
recipe = plone.recipe.precompiler
eggs = ${buildout:eggs}
compile-mo-files = true
extra-paths = ${buildout:directory}/products
